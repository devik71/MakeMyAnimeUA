import sys
import subprocess
import re
from pathlib import Path
import json
from langdetect import detect

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ===
input_dir = Path("input")
video_file = None
for ext in ("*.mkv", "*.mp4", "*.avi", "*.mov"):
    files = list(input_dir.glob(ext))
    if files:
        video_file = files[0]
        break
if video_file is None:
    print("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤—ñ–¥–µ–æ—Ñ–∞–π–ª —É –ø–∞–ø—Ü—ñ input/")
    sys.exit(1)

# === –í–∏—Ç—è–≥—É—î–º–æ —Å–ø–∏—Å–æ–∫ –ø–æ—Ç–æ–∫—ñ–≤ —á–µ—Ä–µ–∑ ffmpeg ===
probe = subprocess.run([
    "ffmpeg", "-i", str(video_file)
], stderr=subprocess.PIPE, stdout=subprocess.PIPE, text=True)

subtitle_streams = []
for line in probe.stderr.splitlines():
    if "Subtitle:" in line:
        m = re.search(r'Stream #0:(\d+)(\((\w+)\))?: Subtitle: (\w+)( \((.*?)\))?', line)
        if m:
            stream_id = m.group(1)
            lang = m.group(3) or "unknown"
            fmt = m.group(4)
            title = m.group(6) or ""
            subtitle_streams.append({
                "id": stream_id,
                "lang": lang,
                "fmt": fmt,
                "title": title,
                "raw": line.strip()
            })

if not subtitle_streams:
    print("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø–æ—Ç–æ–∫—ñ–≤ —Å–∞–±—ñ–≤ —É –≤—ñ–¥–µ–æ!")
    sys.exit(1)

print("–ó–Ω–∞–π–¥–µ–Ω–æ –ø–æ—Ç–æ–∫–∏ —Å–∞–±—ñ–≤:")
for s in subtitle_streams:
    print(f"  Stream #{s['id']}: lang={s['lang']} fmt={s['fmt']} title={s['title']} | {s['raw']}")

# === –í–∏–±—ñ—Ä –ø–æ—Ç–æ–∫—É ===
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–±–∏—Ä–∞—î–º–æ –ø–µ—Ä—à–∏–π ASS/SSA/SRT, –∞–±–æ –∑ title '–ü–æ–ª–Ω—ã–µ —Å—É–±—Ç–∏—Ç—Ä—ã', –∞–±–æ –∑–∞ –Ω–æ–º–µ—Ä–æ–º
chosen = None
for s in subtitle_streams:
    if '–ü–æ–ª–Ω—ã–µ —Å—É–±—Ç–∏—Ç—Ä—ã' in s['title']:
        chosen = s
        break
for s in subtitle_streams:
    if not chosen and s['fmt'].lower() in ('ass','ssa','srt'):
        chosen = s
        break
if not chosen:
    chosen = subtitle_streams[0]

print(f"\n–í–∏–±—Ä–∞–Ω–æ –ø–æ—Ç—ñ–∫ #{chosen['id']} (lang={chosen['lang']} fmt={chosen['fmt']} title={chosen['title']})")

# === –í–∏—Ç—è–≥—É—î–º–æ —Å–∞–±–∏ ===
output_path = input_dir / f"extracted_subs_{chosen['id']}.{chosen['fmt'].lower()}"
subprocess.run([
    "ffmpeg", "-y", "-i", str(video_file), "-map", f"0:{chosen['id']}", "-c", "copy", str(output_path)
], check=True)
print(f"–°–∞–±–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É {output_path}")

# === Preview —Ç–∞ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –º–æ–≤–∏ ===
def preview_and_lang(path, fmt):
    lines = []
    if fmt in ("ass", "ssa"):
        with open(path, 'r', encoding='utf-8') as f:
            for line in f:
                if line.startswith('Dialogue:'):
                    parts = line.strip().split(',', 9)
                    if len(parts) >= 10:
                        text = parts[9].replace('\\N', ' ').replace('\n', ' ').strip()
                        lines.append(text)
                        if len(lines) >= 5:
                            break
    elif fmt == "srt":
        with open(path, 'r', encoding='utf-8') as f:
            block = []
            for l in f:
                if l.strip() == '':
                    if block:
                        lines.append(' '.join(block))
                        block = []
                        if len(lines) >= 5:
                            break
                elif not l.strip().isdigit() and '-->' not in l:
                    block.append(l.strip())
    else:
        print("Preview –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è –¥–ª—è —Ü—å–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç—É.")
        return
    print("\n–ü–µ—Ä—à—ñ 5 —Ä–µ–ø–ª—ñ–∫:")
    for i, t in enumerate(lines):
        print(f"  {i+1}. {t}")
    langs = []
    for t in lines:
        try:
            langs.append(detect(t))
        except:
            langs.append("unknown")
    from collections import Counter
    lang_counter = Counter(langs)
    main_lang = lang_counter.most_common(1)[0][0]
    if main_lang == "uk":
        print("‚ö†Ô∏è  –î–µ—Ç–µ–∫—Ç–æ—Ä –º–æ–≤–∏ –≤–∏–∑–Ω–∞—á–∏–≤ 'uk', –∞–ª–µ –º–∏ —ñ–≥–Ω–æ—Ä—É—î–º–æ —Ü–µ —ñ –≤–≤–∞–∂–∞—î–º–æ, —â–æ –º–æ–≤–∞ 'ru' (—Ä–æ—Å—ñ–π—Å—å–∫–∞)!")
        main_lang = "ru"
    print(f"üåç –í–∏–∑–Ω–∞—á–µ–Ω–∞ –º–æ–≤–∞ —Å–∞–±—ñ–≤: {main_lang}")

preview_and_lang(output_path, chosen['fmt'].lower()) 